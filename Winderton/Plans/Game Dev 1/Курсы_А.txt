Годнота, которую должен посмотреть вообще каждый. Рано или поздно.(лучше рано) Выучи Англ хотя бы для того, чтобы осилить эти курсы.
Итак, курсы:

1. Это лучший курс по операционным системам, точка.
2. Очень хороший курс по основам software engineering.
3. Топ 1 курс по железкам на сети.
4. Один из моих любимых курсов по языкам, памяти и многому другому.
5. Этот тоже, крайне офигенный ресурс по железкам и осям, да и вообще, основам программирования. Если какой-то из первых двух не зайдет(в чем я сомневаюсь), то можешь попробовать этот.
6. Математика

Далее книги, которые я рекомендую читать по той, или иной теме:
1.По железкам, да и вообще архитектуре ЭВМ + многому другому - книга и 5-го цикла. Patt and Patel. Introduction to computing systems как самая первая.
Как с ней закончишь, то можешь смело переходить и на Таненбаума + интеловские мануалы.
2.По операционным системам книга из моей библиотеки. Principles and design of operating systems.
3.С/С++/assembly. По плюсам, если не уверен в базе своей, то почитай что угодно от таких авторов как: Скот Майерс, Герб Саттер, Прата и Страуструп, как вариант. Многое из этого есть в переводах.
Можешь взять что-то из моей библы, можешь найти что-то своё, но именно от этих ребят. Скот Майерс - это вообще что-то с чем-то. Классный инженер, с шикарной подачей материала. Его книга, Effective C++ и more Effective C++, это лучшее что я читал по продвинутым плюсам. Так же у меня в библиотеке появились спецификации, которые не являются стандартизированными по ISO, но близко к ним приближены. Тоже советую присмотреться. Это все требует очень много времени и усидчивости, но если ты все это осилишь, то будь уверен, ты будешь ценным для рынка(если ты об этом думаешь).
Касаемо ассемблера - то тут есть одна книжка(под x86), так точно. Assembly languages for x86. Она есть у меня в библе, поэтому ищи и читай. Там много полезной инфы как по самому языку, так и по многим другим, более фундаметальным вещам. Это ж все таки ассемблер )
Почему именно x86? Потому что я не имею опыта работы с другими микроархтитектурами.
4. Игровые движки. Джейсон Грегори, game engine architecture.
5. gameplay программирование и все, что связано с полноценным продакшеном игр - game codding complete.
6. AI. AI for game developers. Книга в либе.
7. Математика. Выгодский, Сканави. Советские книги хороши, поэтому не брезгуй ими.

Что касаемо всего остального, то просто посмотри библиотеку. Там полно различной, годной литературы, в которой ты найдешь для себя что-то полезное.
Если же говорить о микроархитектурах, то вся моя практика сводится к x86 совместимым процессорам. Я оч мало знаком с ARM, никогда его не дебажил, но если тебе вдруг будет интереса мобильная разработка, то я могу подкинуть пару ресурсов.

## Check Items: 

### Сами курсы
http://www.infocobuild.com/education/audio-video-courses/computer-science/cs162-berkeley.html
http://www.infocobuild.com/education/audio-video-courses/computer-science/cs169-berkeley.html
http://www.ece.cmu.edu/~ece447/s15/doku.php?id=schedule
https://see.stanford.edu/Course/CS107
http://www.eecs.harvard.edu/~cs161/syllabus.html
https://www.youtube.com/watch?v=L3LMbpZIKhQ&list=PLB7540DEDD482705B

